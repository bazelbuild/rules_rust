load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_import", "cc_test")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
    "rust_shared_library",
    "rust_static_library",
)

package(default_visibility = ["//test/unit/linker_inputs_propagation:__pkg__"])

rust_library(
    name = "foo",
    srcs = ["foo.rs"],
    edition = "2018",
)

cc_binary(
    name = "libfoo_shared.dylib",
    srcs = [
        "foo_shared.cc",
    ],
    linkshared = True,
    target_compatible_with = ["@platforms//os:macos"],
)

cc_binary(
    name = "foo_shared.dll",
    srcs = [
        "foo_shared.cc",
    ],
    linkshared = True,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_binary(
    name = "libfoo_shared.so",
    srcs = [
        "foo_shared.cc",
    ],
    linkshared = True,
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "import_foo_shared.so",
    hdrs = ["foo_shared.h"],
    shared_library = "libfoo_shared.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "import_foo_shared.dylib",
    hdrs = ["foo_shared.h"],
    shared_library = "libfoo_shared.dylib",
    target_compatible_with = ["@platforms//os:macos"],
)

cc_import(
    name = "import_foo_shared.dll",
    interface_library = ":foo_shared.lib",
    shared_library = ":foo_shared.dll",
    target_compatible_with = ["@platforms//os:windows"],
)

filegroup(
    name = "foo_interface_lib",
    srcs = [":foo_shared.dll"],
    output_group = "interface_library",
    target_compatible_with = ["@platforms//os:windows"],
)

copy_file(
    name = "copy_foo_interface_lib",
    src = ":foo_interface_lib",
    out = "foo_shared.lib",
    target_compatible_with = ["@platforms//os:windows"],
)

rust_static_library(
    name = "staticlib_uses_foo",
    srcs = ["bar_uses_foo.rs"],
    edition = "2018",
    deps = [":foo"],
)

rust_shared_library(
    name = "sharedlib_uses_foo",
    srcs = ["bar_uses_foo.rs"],
    edition = "2018",
    deps = [":foo"],
)

alias(
    name = "foo_shared_alias",
    actual = select({
        "@platforms//os:windows": "import_foo_shared.dll",
        "@platforms//os:macos": "import_foo_shared.dylib",
        "@platforms//os:linux": "import_foo_shared.so",
    }),
)

rust_static_library(
    name = "staticlib_uses_shared_foo",
    srcs = ["bar_uses_shared_foo.rs"],
    edition = "2018",
    deps = [":foo_shared_alias"],
)

rust_static_library(
    name = "sharedlib_uses_shared_foo",
    srcs = ["bar_uses_shared_foo.rs"],
    edition = "2018",
    deps = [":foo_shared_alias"],
)

cc_test(
    name = "depends_on_foo_via_staticlib",
    srcs = ["baz.cc"],
    deps = [":staticlib_uses_foo"],
)

cc_test(
    name = "depends_on_foo_via_sharedlib",
    srcs = ["baz.cc"],
    deps = [":sharedlib_uses_foo"],
)

cc_test(
    name = "depends_on_shared_foo_via_sharedlib",
    srcs = ["baz.cc"],
    deps = [":sharedlib_uses_shared_foo"],
)

cc_test(
    name = "depends_on_shared_foo_via_staticlib",
    srcs = ["baz.cc"],
    deps = [":staticlib_uses_shared_foo"],
)
