_COMMON_ENV = {
    "CARGO": "$${PWD}/$(execpath //rust/toolchain:current_exec_cargo_files)",
    "DETECT_CHANGES": "true",
    "RUSTC": "$${PWD}/$(execpath //rust/toolchain:current_exec_rustc_files)",
}

_ENV = select({
    "@rules_rust//rust/platform:aarch64-apple-darwin": dict(_COMMON_ENV.items() + {
        "IS_WINDOWS": "false",
        "TARGET": "aarch64-apple-darwin",
    }.items()),
    "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": dict(_COMMON_ENV.items() + {
        "IS_WINDOWS": "false",
        "TARGET": "aarch64-unknown-linux-gnu",
    }.items()),
    "@rules_rust//rust/platform:x86_64-apple-darwin": dict(_COMMON_ENV.items() + {
        "IS_WINDOWS": "false",
        "TARGET": "x86_64-apple-darwin",
    }.items()),
    "@rules_rust//rust/platform:x86_64-pc-windows-msvc": dict(_COMMON_ENV.items() + {
        "IS_WINDOWS": "true",
        "TARGET": "x86_64-pc-windows-gnu",
    }.items()),
    "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": dict(_COMMON_ENV.items() + {
        "IS_WINDOWS": "false",
        "TARGET": "x86_64-unknown-linux-gnu",
    }.items()),
})

# Bootstrap the crate_universe resolver for the current exec platform
sh_binary(
    name = "build",
    srcs = ["build.sh"],
    data = [
        ":cargo",
        ":rustc",
    ],
    env = _ENV,
    tags = ["requires-network"],
)

sh_binary(
    name = "install",
    srcs = ["install.sh"],
    data = [
        ":cargo",
        ":rustc",
    ],
    env = _ENV,
)
