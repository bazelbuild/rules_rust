---
aspects_flags: &aspects_flags
  - "--config=rustfmt"
  - "--config=clippy"
default_linux_targets: &default_linux_targets
  - "//..."
  # TODO: Switch manual tag to platform constraint after bazel 4.0.
  - "//test/versioned_dylib:versioned_dylib_test"
default_macos_targets: &default_macos_targets
  - "//..."
default_windows_targets: &default_windows_targets
  - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
  - "//..."
  - "-//bindgen/..."
  - "-//test/test_env/..."
  - "-//test/proto/..."
  - "-//tools/rust_analyzer/..."
  - "-//test/rustfmt/..."
  # rust_doc_test targets are currently broken on windows
  # see: https://github.com/bazelbuild/rules_rust/issues/887
  - "-//test/chained_direct_deps:mod3_doc_test"
tasks:
  ubuntu2004:
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  rbe_ubuntu1604:
    build_targets:
      - "//..."
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      - "//test/..."
      - "-//test/conflicting_deps:conflicting_deps_test"
      # rust_doc_test is likely not fully sandboxed
      - "-//test/chained_direct_deps:mod3_doc_test"
  macos:
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    build_flags: *aspects_flags
  windows:
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
  ubuntu2004_with_aspects:
    name: With Aspects
    platform: ubuntu2004
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags: *aspects_flags
  rbe_ubuntu1604_with_aspects:
    name: With Aspects
    platform: rbe_ubuntu1604
    build_targets: *default_linux_targets
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "..."
      - "//test/..."
      - "-//test/conflicting_deps:conflicting_deps_test"
      # rust_doc_test is likely not fully sandboxed
      - "-//test/chained_direct_deps:mod3_doc_test"
    build_flags: *aspects_flags
  macos_with_aspects:
    name: With Aspects
    platform: macos
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    build_flags: *aspects_flags
  windows_with_aspects:
    name: With Aspects
    platform: windows
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
  ubuntu2004_clang:
    name: With Clang
    platform: ubuntu2004
    build_flags:
      - "--config=rustfmt"
      - "--config=clippy"
      - "--repo_env=CC=clang"
      # TODO(hlopko): Make this work (some tests were failing)
      # - "--linkopt=-fuse-ld=lld"
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  ubuntu1804:
    name: "Min Bazel Version"
    bazel: "3.5.0"
    platform: ubuntu1804
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  ubuntu1804_with_aspects:
    name: "Min Bazel Version With Aspects"
    bazel: "3.5.0"
    platform: ubuntu1804
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags: *aspects_flags
  linux_docs:
    name: Docs
    platform: ubuntu2004
    working_directory: docs
    build_targets:
      - //...
    run_targets:
      - "//:test_docs"
  clippy_failure:
    name: Negative Clippy Tests
    platform: ubuntu2004
    run_targets:
      - "//test/clippy:clippy_failure_test"
  rustfmt_failure:
    name: Negative Rustfmt Tests
    platform: ubuntu2004
    run_targets:
      - "//test/rustfmt:test_runner"
  ubuntu2004_examples:
    name: Examples
    platform: ubuntu2004
    working_directory: examples
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  rbe_ubuntu1604_examples:
    name: Examples
    platform: rbe_ubuntu1604
    working_directory: examples
    rbe_examples_targets: &rbe_examples_targets
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      # TODO: This requires an updated `rules_foreign_cc`
      - "-//sys/..."
      # rust_doc_test is likely not fully sandboxed
      - "-//fibonacci:fibonacci_doc_test"
      - "-//hello_lib:hello_lib_doc_test"
      - "-//ffi/rust_calling_c/simple/..."
      # See https://github.com/bazelbuild/bazel/issues/9987
      - "-//ffi/rust_calling_c:matrix_dylib_test"
    build_targets: *rbe_examples_targets
    test_targets: *rbe_examples_targets
    build_flags: *aspects_flags
  macos_examples:
    name: Examples
    platform: macos
    working_directory: examples
    build_targets:
      - "//..."
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      # This test requires --incompatible_macos_set_install_name and Bazel 4.2.0+
      - "-//ffi/rust_calling_c:matrix_dylib_test"
    build_flags: *aspects_flags
  windows_examples:
    name: Examples
    platform: windows
    working_directory: examples
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    windows_targets: &windows_targets
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      - "-//ffi/rust_calling_c:matrix_dylib_test"
      - "-//ffi/rust_calling_c:matrix_dynamically_linked"
      - "-//ffi/rust_calling_c/simple/..."
      - "-//sys/..."
      - "-//proto/..."
      - "-//wasm/..."
      # rust_doc_test targets are currently broken on windows
      # see: https://github.com/bazelbuild/rules_rust/issues/887
      - "-//hello_lib:hello_lib_doc_test"
      - "-//fibonacci:fibonacci_doc_test"
    build_targets: *windows_targets
    test_targets: *windows_targets
  crate_universe_examples_ubuntu2004:
    name: Crate Universe Examples
    platform: ubuntu2004
    environment:
      RULES_RUST_CRATE_UNIVERSE_BOOTSTRAP: true
    working_directory: examples/crate_universe
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_rbe_ubuntu1604:
    name: Crate Universe Examples
    platform: rbe_ubuntu1604
    environment:
      RULES_RUST_CRATE_UNIVERSE_BOOTSTRAP: true
    working_directory: examples/crate_universe
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_examples_macos:
    name: Crate Universe Examples
    platform: macos
    environment:
      RULES_RUST_CRATE_UNIVERSE_BOOTSTRAP: true
    working_directory: examples/crate_universe
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_examples_windows:
    name: Crate Universe Examples
    platform: windows
    environment:
      RULES_RUST_CRATE_UNIVERSE_BOOTSTRAP: true
    working_directory: examples/crate_universe
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    crate_universe_windows_targets: &crate_universe_windows_targets
      - "//..."
      # TODO: There are windows specific build issues in the generated
      # dependencies. This should be fixed and all testing enabled.
      - "-//has_aliased_deps/..."
      - "-//uses_proc_macro/..."
      - "-//uses_sys_crate/..."
    build_targets: *crate_universe_windows_targets
    # TODO: fix test targets in `crate_universe_windows_targets`
    test_targets: *crate_universe_windows_targets
buildifier:
  version: latest
  warnings: "all"
