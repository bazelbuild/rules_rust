###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//vendor_local_manifests:crates_vendor
###############################################################################

load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT
# ])

rust_library(
    name = "tokio",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "bytes",
        "default",
        "fs",
        "full",
        "io-std",
        "io-util",
        "libc",
        "macros",
        "memchr",
        "mio",
        "net",
        "num_cpus",
        "once_cell",
        "parking_lot",
        "process",
        "rt",
        "rt-multi-thread",
        "signal",
        "signal-hook-registry",
        "sync",
        "test-util",
        "time",
        "tokio-macros",
        "winapi",
    ],
    crate_root = "src/lib.rs",
    edition = "2018",
    proc_macro_deps = [
        "//vendor_local_manifests/crates/tokio-macros-1.8.2:tokio_macros",
    ],
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "1.16.1",
    deps = [
        "//vendor_local_manifests/crates/bytes-1.3.0:bytes",
        "//vendor_local_manifests/crates/memchr-2.5.0:memchr",
        "//vendor_local_manifests/crates/mio-0.7.14:mio",
        "//vendor_local_manifests/crates/num_cpus-1.15.0:num_cpus",
        "//vendor_local_manifests/crates/once_cell-1.17.0:once_cell",
        "//vendor_local_manifests/crates/parking_lot-0.11.2:parking_lot",
        "//vendor_local_manifests/crates/pin-project-lite-0.2.9:pin_project_lite",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-linux-android": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "//vendor_local_manifests/crates/winapi-0.3.9:winapi",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-apple-darwin": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-linux-android": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "//vendor_local_manifests/crates/winapi-0.3.9:winapi",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "//vendor_local_manifests/crates/winapi-0.3.9:winapi",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "//vendor_local_manifests/crates/libc-0.2.139:libc",  # cfg(unix)
            "//vendor_local_manifests/crates/signal-hook-registry-1.4.0:signal_hook_registry",  # cfg(unix)
        ],
        "//conditions:default": [],
    }),
)
