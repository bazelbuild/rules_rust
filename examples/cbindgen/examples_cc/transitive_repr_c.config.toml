# Note that detecting what symbols to include in a header
# file does not work off of a crates extern/use crates
# declared in source. To include transitive symbols, a
# custom config must be created until this feature is
# implemented: https://github.com/eqrion/cbindgen/issues/7

language = "C++"

############## Options for Wrapping the Contents of the Header #################

include_guard = "INCLUDE_TRANSITIVE_REPR_C_CBINDGEN_H"
autogen_warning = "/* Warning, this file is autogenerated by cbindgen via rules_rust for `//cbindgen/examples_cc:transitive_repr_c_cbindgen`. Don't modify this manually. */"
include_version = false
namespace = "transitive_repr_c_cbindgen"
namespaces = []
using_namespaces = []
sys_includes = []
includes = []
no_includes = false
cpp_compat = true
after_includes = ""


############################ Code Style Options ################################

braces = "NextLine"
line_length = 120
tab_width = 4
documentation_style = "auto"


############################# Codegen Options ##################################

style = "both"


[export]
include = []
exclude = []
item_types = []
renaming_overrides_prefixing = false


[fn]
rename_args = "None"
args = "auto"
sort_by = "Name"


[struct]
rename_fields = "None"
derive_constructor = false
derive_eq = false
derive_neq = false
derive_lt = false
derive_lte = false
derive_gt = false
derive_gte = false


[enum]
rename_variants = "None"
add_sentinel = false
prefix_with_name = false
derive_helper_methods = false
derive_const_casts = false
derive_mut_casts = false
derive_tagged_enum_destructor = false
derive_tagged_enum_copy_constructor = false
enum_class = true
private_default_tagged_enum_constructor = false


[const]
allow_static_const = true
allow_constexpr = true


[macro_expansion]
bitflags = false

############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = true
clean = true
extra_bindings = [
"rust_rlib",
]
